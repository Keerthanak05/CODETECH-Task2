# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Load the California Housing dataset
california = fetch_california_housing(as_frame=True)
data = california.frame

# Display dataset information
print(data.head())

# Select features and target variable
# Using 'MedInc', 'AveRooms', 'AveOccup', and 'HouseAge' as features
X = data[['MedInc', 'AveRooms', 'AveOccup', 'HouseAge']]
y = data['MedHouseVal']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error (MSE):", mse)
print("R-squared (RÂ²):", r2)

# Plot actual vs predicted prices
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, alpha=0.7, color='b')
plt.plot([0, 5], [0, 5], '--r')  # Line for perfect prediction
plt.xlabel("Actual Prices (in $100k)")
plt.ylabel("Predicted Prices (in $100k)")
plt.title("Actual vs Predicted Prices")
plt.show()
